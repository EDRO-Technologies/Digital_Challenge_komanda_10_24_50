services:
  - docker:dind

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  IMGNAME: 'digital-api'
  DOCKER_HUB_USER: '$DOCKER_HUB_USERNAME'
  DOCKER_HUB_PASSWORD: '$DOCKER_HUB_PASSWORD'
  SERVER_IP: '$SERVER_IP'
  SERVER_USER: root
  SSH_PRIVATE_KEY: '$SSH_PRIVATE_KEY'

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH ==  "main"
      variables:
        ENVIRONMENT_NAME: production
        HOST: api.igniz.ru
    - if: $CI_COMMIT_BRANCH == "stage"
      variables:
        ENVIRONMENT_NAME: stage
        HOST: api.igniz.ru

stages:
  - build
  - deploy

build:
  image: docker:stable
  stage: build
  environment:
    name: $ENVIRONMENT_NAME
  tags:
    - $ENVIRONMENT_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - echo "Building Docker image..."
    - sh ./env-as-build-args.sh $ENV_FILE | xargs docker build -t $TAG_COMMIT -t $TAG_LATEST .

deploy:
  image: docker:stable
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
  tags:
    - $ENVIRONMENT_NAME
  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker container rm -f $IMGNAME || true
    - source $ENV_FILE
    - docker run -d --restart unless-stopped --env-file $ENV_FILE --net host -p $PORT:$PORT --name $IMGNAME $TAG_COMMIT
  after_script:
    - docker system prune -a -f
